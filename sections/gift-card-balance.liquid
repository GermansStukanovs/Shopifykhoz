<div class="gift-card-balance color-{{ section.settings.color_scheme }}" id="GiftCardBalance-{{ section.id }}">
  <div class="page-width">
    <div class="gift-card-balance__container">
      {% if section.settings.title != blank %}
        <h2 class="gift-card-balance__heading">{{ section.settings.title }}</h2>
      {% endif %}

      {% if section.settings.description != blank %}
        <div class="gift-card-balance__description">
          {{ section.settings.description }}
        </div>
      {% endif %}

      <div class="gift-card-balance__form-wrapper">
        <form id="CheckGiftCardForm" class="gift-card-balance__form">
          <div class="field">
            <input
              type="text"
              id="GiftCardCode"
              name="gift_card_code"
              class="field__input"
              placeholder="{{ section.settings.input_placeholder }}"
              autocomplete="off"
              required
            >
            <label class="field__label" for="GiftCardCode">
              {{ section.settings.input_label }}
            </label>
          </div>

          <button type="submit" class="button button--primary">
            {{ section.settings.button_text }}
          </button>
        </form>
      </div>

      <div id="GiftCardResult" class="gift-card-balance__result" style="display: none;">
        <div id="GiftCardResultSuccess" class="gift-card-balance__success" style="display: none;">
          <h3>{{ section.settings.success_heading }}</h3>
          <p>
            {{ section.settings.balance_text }}
            <span id="GiftCardBalance" class="gift-card-balance__amount"></span>
          </p>
          {% if section.settings.show_expiry %}
            <p>
              {{ section.settings.expiry_text }}
              <span id="GiftCardExpiry"></span>
            </p>
          {% endif %}
        </div>

        <div id="GiftCardResultError" class="gift-card-balance__error" style="display: none;">
          <p id="GiftCardErrorMessage">{{ section.settings.error_text }}</p>
        </div>
      </div>

      <div id="GiftCardLoading" class="gift-card-balance__loading" style="display: none;">
        <div class="loading-overlay__spinner">
          <svg
            aria-hidden="true"
            focusable="false"
            class="spinner"
            viewBox="0 0 66 66"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .gift-card-balance {
    padding: {{ section.settings.padding_top }}px 0 {{ section.settings.padding_bottom }}px 0;
  }

  .gift-card-balance__container {
    max-width: {{ section.settings.content_width }}px;
    margin: 0 auto;
    text-align: {{ section.settings.text_alignment }};
  }

  .gift-card-balance__heading {
    margin-bottom: 1.5rem;
  }

  .gift-card-balance__description {
    margin-bottom: 2rem;
  }

  .gift-card-balance__form-wrapper {
    margin-bottom: 2rem;
  }

  .gift-card-balance__form {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: {{ section.settings.text_alignment }};
  }

  .gift-card-balance__form .field {
    flex: 1;
    min-width: 200px;
  }

  .gift-card-balance__result {
    margin-top: 2rem;
    padding: 1.5rem;
    border-radius: 4px;
  }

  .gift-card-balance__success {
    background-color: rgba(var(--color-success), 0.1);
    color: rgb(var(--color-success));
    padding: 1rem;
    border-radius: 4px;
  }

  .gift-card-balance__error {
    background-color: rgba(var(--color-error), 0.1);
    color: rgb(var(--color-error));
    padding: 1rem;
    border-radius: 4px;
  }

  .gift-card-balance__amount {
    font-weight: bold;
  }

  @media screen and (max-width: 749px) {
    .gift-card-balance__form {
      flex-direction: column;
    }

    .gift-card-balance__form .button {
      width: 100%;
    }
  }
</style>

<script>
  class GiftCardBalanceChecker extends HTMLElement {
    constructor() {
      super();
      this.form = this.querySelector('#CheckGiftCardForm');
      this.resultContainer = this.querySelector('#GiftCardResult');
      this.successContainer = this.querySelector('#GiftCardResultSuccess');
      this.errorContainer = this.querySelector('#GiftCardResultError');
      this.errorMessage = this.querySelector('#GiftCardErrorMessage');
      this.balanceElement = this.querySelector('#GiftCardBalance');
      this.expiryElement = this.querySelector('#GiftCardExpiry');
      this.loadingElement = this.querySelector('#GiftCardLoading');

      this.form.addEventListener('submit', this.onSubmitHandler.bind(this));
    }

    onSubmitHandler(event) {
      event.preventDefault();

      const giftCardCode = this.form.querySelector('#GiftCardCode').value.trim();

      if (!giftCardCode) {
        this.showError('{{ section.settings.empty_code_error }}');
        return;
      }

      this.checkGiftCardBalance(giftCardCode);
    }

    showLoading() {
      this.loadingElement.style.display = 'block';
      this.resultContainer.style.display = 'none';
    }

    hideLoading() {
      this.loadingElement.style.display = 'none';
    }

    showSuccess(balance, expiry) {
      this.resultContainer.style.display = 'block';
      this.successContainer.style.display = 'block';
      this.errorContainer.style.display = 'none';

      // Format the balance as currency
      const formattedBalance = this.formatMoney(balance);
      this.balanceElement.textContent = formattedBalance;

      // Format the expiry date if available
      if (expiry && this.expiryElement) {
        const expiryDate = new Date(expiry);
        this.expiryElement.textContent = expiryDate.toLocaleDateString();
      }
    }

    showError(message) {
      this.resultContainer.style.display = 'block';
      this.successContainer.style.display = 'none';
      this.errorContainer.style.display = 'block';
      this.errorMessage.textContent = message;
    }

    formatMoney(cents) {
      if (typeof cents === 'string') {
        cents = cents.replace('.', '');
      }

      const value = parseInt(cents, 10);
      const formatter = new Intl.NumberFormat('{{ shop.locale }}', {
        style: 'currency',
        currency: '{{ shop.currency }}',
        minimumFractionDigits: 2,
      });

      return formatter.format(value / 100);
    }

    checkGiftCardBalance(code) {
      this.showLoading();

      fetch('/apps/gift-cards/check-balance', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Accept: 'application/json',
        },
        body: JSON.stringify({ code: code }),
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error('{{ section.settings.network_error }}');
          }
          return response.json();
        })
        .then((data) => {
          this.hideLoading();

          if (data.error) {
            this.showError(data.error);
          } else if (data.balance !== undefined) {
            this.showSuccess(data.balance, data.expires_on);
          } else {
            this.showError('{{ section.settings.unknown_error }}');
          }
        })
        .catch((error) => {
          this.hideLoading();
          this.showError(error.message || '{{ section.settings.network_error }}');
        });
    }
  }

  customElements.define('gift-card-balance', GiftCardBalanceChecker);
</script>

{% schema %}
{
  "name": "Gift Card Balance",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "default": "Check Gift Card Balance",
      "label": "Heading"
    },
    {
      "type": "richtext",
      "id": "description",
      "default": "<p>Enter your gift card code to check the available balance.</p>",
      "label": "Description"
    },
    {
      "type": "text",
      "id": "input_label",
      "default": "Gift Card Code",
      "label": "Input label"
    },
    {
      "type": "text",
      "id": "input_placeholder",
      "default": "Enter gift card code",
      "label": "Input placeholder"
    },
    {
      "type": "text",
      "id": "button_text",
      "default": "Check Balance",
      "label": "Button text"
    },
    {
      "type": "text",
      "id": "success_heading",
      "default": "Gift Card Balance",
      "label": "Success heading"
    },
    {
      "type": "text",
      "id": "balance_text",
      "default": "Available balance:",
      "label": "Balance text"
    },
    {
      "type": "checkbox",
      "id": "show_expiry",
      "default": true,
      "label": "Show expiry date"
    },
    {
      "type": "text",
      "id": "expiry_text",
      "default": "Expires on:",
      "label": "Expiry text"
    },
    {
      "type": "text",
      "id": "error_text",
      "default": "Unable to find gift card. Please check the code and try again.",
      "label": "Error text"
    },
    {
      "type": "text",
      "id": "empty_code_error",
      "default": "Please enter a gift card code.",
      "label": "Empty code error"
    },
    {
      "type": "text",
      "id": "network_error",
      "default": "Network error. Please try again later.",
      "label": "Network error"
    },
    {
      "type": "text",
      "id": "unknown_error",
      "default": "An unknown error occurred. Please try again later.",
      "label": "Unknown error"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center",
      "label": "Text alignment"
    },
    {
      "type": "range",
      "id": "content_width",
      "min": 400,
      "max": 1200,
      "step": 50,
      "default": 650,
      "label": "Content width"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding bottom",
      "default": 40
    }
  ],
  "presets": [
    {
      "name": "Gift Card Balance",
      "category": "Customer"
    }
  ]
}
{% endschema %}
